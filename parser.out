Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement_list -> <empty>
Rule 5     statement -> VAR id
Rule 6     statement -> VAR id ASSIGN expression
Rule 7     statement -> id ASSIGN expression
Rule 8     statement -> STORE LPAREN expression COMMA expression RPAREN
Rule 9     statement -> GOTO expression
Rule 10    statement -> ASSERT bool_expression
Rule 11    statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression
Rule 12    statement -> PRINT_OUTPUT LPAREN expression RPAREN
Rule 13    expression -> expression add_op term
Rule 14    expression -> term
Rule 15    add_op -> PLUS
Rule 16    add_op -> MINUS
Rule 17    term -> term mulop factor
Rule 18    term -> factor
Rule 19    mulop -> MULTIPLY
Rule 20    mulop -> DIVIDE
Rule 21    mulop -> MODULO
Rule 22    mulop -> XOR
Rule 23    mulop -> INCLUSIVE_OR
Rule 24    mulop -> ADDRESS
Rule 25    factor -> unary_op factor
Rule 26    factor -> LPAREN expression RPAREN
Rule 27    factor -> 32_BIT_USIGN_INT
Rule 28    factor -> ID
Rule 29    factor -> GET_INPUT LPAREN RPAREN
Rule 30    factor -> LOAD LPAREN expression RPAREN
Rule 31    id -> ID
Rule 32    bool_expression -> expression rel_op expression
Rule 33    rel_op -> EQUALITY
Rule 34    rel_op -> INEQUALITY
Rule 35    rel_op -> LESS_THAN
Rule 36    rel_op -> GREATER_THAN
Rule 37    rel_op -> LESS_THAN_EQ
Rule 38    rel_op -> GREATER_THAN_EQ
Rule 39    unary_op -> PLUS
Rule 40    unary_op -> MINUS
Rule 41    unary_op -> INCREMENT
Rule 42    unary_op -> DECREMENT
Rule 43    unary_op -> ADDRESS

Terminals, with rules where they appear

32_BIT_USIGN_INT     : 27
ADDRESS              : 24 43
ASSERT               : 10
ASSIGN               : 6 7
COMMA                : 8
DECREMENT            : 42
DIVIDE               : 20
ELSE                 : 11
EQUALITY             : 33
GET_INPUT            : 29
GOTO                 : 9 11 11
GREATER_THAN         : 36
GREATER_THAN_EQ      : 38
ID                   : 28 31
IF                   : 11
INCLUSIVE_OR         : 23
INCREMENT            : 41
INEQUALITY           : 34
LESS_THAN            : 35
LESS_THAN_EQ         : 37
LOAD                 : 30
LPAREN               : 8 11 12 26 29 30
MINUS                : 16 40
MODULO               : 21
MULTIPLY             : 19
PLUS                 : 15 39
PRINT_OUTPUT         : 12
RPAREN               : 8 11 12 26 29 30
STORE                : 8
THEN                 : 11
VAR                  : 5 6
XOR                  : 22
error                : 

Nonterminals, with rules where they appear

add_op               : 13
bool_expression      : 10 11
expression           : 6 7 8 8 9 11 11 12 13 26 30 32 32
factor               : 17 18 25
id                   : 5 6 7
mulop                : 17
rel_op               : 32
start                : 0
statement            : 2 3
statement_list       : 1 2
term                 : 13 14 17
unary_op             : 25

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement_list -> .
    (5) statement -> . VAR id
    (6) statement -> . VAR id ASSIGN expression
    (7) statement -> . id ASSIGN expression
    (8) statement -> . STORE LPAREN expression COMMA expression RPAREN
    (9) statement -> . GOTO expression
    (10) statement -> . ASSERT bool_expression
    (11) statement -> . IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression
    (12) statement -> . PRINT_OUTPUT LPAREN expression RPAREN
    (31) id -> . ID

  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for STORE resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for ASSERT resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for PRINT_OUTPUT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    $end            reduce using rule 4 (statement_list -> .)
    VAR             shift and go to state 8
    STORE           shift and go to state 10
    GOTO            shift and go to state 11
    ASSERT          shift and go to state 3
    IF              shift and go to state 2
    PRINT_OUTPUT    shift and go to state 1
    ID              shift and go to state 7

  ! VAR             [ reduce using rule 4 (statement_list -> .) ]
  ! STORE           [ reduce using rule 4 (statement_list -> .) ]
  ! GOTO            [ reduce using rule 4 (statement_list -> .) ]
  ! ASSERT          [ reduce using rule 4 (statement_list -> .) ]
  ! IF              [ reduce using rule 4 (statement_list -> .) ]
  ! PRINT_OUTPUT    [ reduce using rule 4 (statement_list -> .) ]
  ! ID              [ reduce using rule 4 (statement_list -> .) ]

    start                          shift and go to state 4
    statement                      shift and go to state 5
    statement_list                 shift and go to state 6
    id                             shift and go to state 9

state 1

    (12) statement -> PRINT_OUTPUT . LPAREN expression RPAREN

    LPAREN          shift and go to state 12


state 2

    (11) statement -> IF . LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression

    LPAREN          shift and go to state 13


state 3

    (10) statement -> ASSERT . bool_expression
    (32) bool_expression -> . expression rel_op expression
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    factor                         shift and go to state 20
    unary_op                       shift and go to state 24
    expression                     shift and go to state 26
    bool_expression                shift and go to state 28

state 4

    (0) S' -> start .



state 5

    (3) statement_list -> statement .

    VAR             reduce using rule 3 (statement_list -> statement .)
    STORE           reduce using rule 3 (statement_list -> statement .)
    GOTO            reduce using rule 3 (statement_list -> statement .)
    ASSERT          reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    PRINT_OUTPUT    reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 6

    (1) start -> statement_list .
    (2) statement_list -> statement_list . statement
    (5) statement -> . VAR id
    (6) statement -> . VAR id ASSIGN expression
    (7) statement -> . id ASSIGN expression
    (8) statement -> . STORE LPAREN expression COMMA expression RPAREN
    (9) statement -> . GOTO expression
    (10) statement -> . ASSERT bool_expression
    (11) statement -> . IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression
    (12) statement -> . PRINT_OUTPUT LPAREN expression RPAREN
    (31) id -> . ID

    $end            reduce using rule 1 (start -> statement_list .)
    VAR             shift and go to state 8
    STORE           shift and go to state 10
    GOTO            shift and go to state 11
    ASSERT          shift and go to state 3
    IF              shift and go to state 2
    PRINT_OUTPUT    shift and go to state 1
    ID              shift and go to state 7

    id                             shift and go to state 9
    statement                      shift and go to state 29

state 7

    (31) id -> ID .

    ASSIGN          reduce using rule 31 (id -> ID .)
    VAR             reduce using rule 31 (id -> ID .)
    STORE           reduce using rule 31 (id -> ID .)
    GOTO            reduce using rule 31 (id -> ID .)
    ASSERT          reduce using rule 31 (id -> ID .)
    IF              reduce using rule 31 (id -> ID .)
    PRINT_OUTPUT    reduce using rule 31 (id -> ID .)
    ID              reduce using rule 31 (id -> ID .)
    $end            reduce using rule 31 (id -> ID .)


state 8

    (5) statement -> VAR . id
    (6) statement -> VAR . id ASSIGN expression
    (31) id -> . ID

    ID              shift and go to state 7

    id                             shift and go to state 30

state 9

    (7) statement -> id . ASSIGN expression

    ASSIGN          shift and go to state 31


state 10

    (8) statement -> STORE . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 32


state 11

    (9) statement -> GOTO . expression
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 33

state 12

    (12) statement -> PRINT_OUTPUT LPAREN . expression RPAREN
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 34

state 13

    (11) statement -> IF LPAREN . bool_expression RPAREN THEN GOTO expression ELSE GOTO expression
    (32) bool_expression -> . expression rel_op expression
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    factor                         shift and go to state 20
    unary_op                       shift and go to state 24
    expression                     shift and go to state 26
    bool_expression                shift and go to state 35

state 14

    (30) factor -> LOAD . LPAREN expression RPAREN

    LPAREN          shift and go to state 36


state 15

    (14) expression -> term .
    (17) term -> term . mulop factor
    (19) mulop -> . MULTIPLY
    (20) mulop -> . DIVIDE
    (21) mulop -> . MODULO
    (22) mulop -> . XOR
    (23) mulop -> . INCLUSIVE_OR
    (24) mulop -> . ADDRESS

    PLUS            reduce using rule 14 (expression -> term .)
    MINUS           reduce using rule 14 (expression -> term .)
    VAR             reduce using rule 14 (expression -> term .)
    STORE           reduce using rule 14 (expression -> term .)
    GOTO            reduce using rule 14 (expression -> term .)
    ASSERT          reduce using rule 14 (expression -> term .)
    IF              reduce using rule 14 (expression -> term .)
    PRINT_OUTPUT    reduce using rule 14 (expression -> term .)
    ID              reduce using rule 14 (expression -> term .)
    $end            reduce using rule 14 (expression -> term .)
    RPAREN          reduce using rule 14 (expression -> term .)
    COMMA           reduce using rule 14 (expression -> term .)
    EQUALITY        reduce using rule 14 (expression -> term .)
    INEQUALITY      reduce using rule 14 (expression -> term .)
    LESS_THAN       reduce using rule 14 (expression -> term .)
    GREATER_THAN    reduce using rule 14 (expression -> term .)
    LESS_THAN_EQ    reduce using rule 14 (expression -> term .)
    GREATER_THAN_EQ reduce using rule 14 (expression -> term .)
    ELSE            reduce using rule 14 (expression -> term .)
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 37
    XOR             shift and go to state 43
    INCLUSIVE_OR    shift and go to state 40
    ADDRESS         shift and go to state 39

    mulop                          shift and go to state 41

state 16

    (41) unary_op -> INCREMENT .

    LPAREN          reduce using rule 41 (unary_op -> INCREMENT .)
    32_BIT_USIGN_INT reduce using rule 41 (unary_op -> INCREMENT .)
    ID              reduce using rule 41 (unary_op -> INCREMENT .)
    GET_INPUT       reduce using rule 41 (unary_op -> INCREMENT .)
    LOAD            reduce using rule 41 (unary_op -> INCREMENT .)
    PLUS            reduce using rule 41 (unary_op -> INCREMENT .)
    MINUS           reduce using rule 41 (unary_op -> INCREMENT .)
    INCREMENT       reduce using rule 41 (unary_op -> INCREMENT .)
    DECREMENT       reduce using rule 41 (unary_op -> INCREMENT .)
    ADDRESS         reduce using rule 41 (unary_op -> INCREMENT .)


state 17

    (26) factor -> LPAREN . expression RPAREN
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 44

state 18

    (43) unary_op -> ADDRESS .

    LPAREN          reduce using rule 43 (unary_op -> ADDRESS .)
    32_BIT_USIGN_INT reduce using rule 43 (unary_op -> ADDRESS .)
    ID              reduce using rule 43 (unary_op -> ADDRESS .)
    GET_INPUT       reduce using rule 43 (unary_op -> ADDRESS .)
    LOAD            reduce using rule 43 (unary_op -> ADDRESS .)
    PLUS            reduce using rule 43 (unary_op -> ADDRESS .)
    MINUS           reduce using rule 43 (unary_op -> ADDRESS .)
    INCREMENT       reduce using rule 43 (unary_op -> ADDRESS .)
    DECREMENT       reduce using rule 43 (unary_op -> ADDRESS .)
    ADDRESS         reduce using rule 43 (unary_op -> ADDRESS .)


state 19

    (29) factor -> GET_INPUT . LPAREN RPAREN

    LPAREN          shift and go to state 45


state 20

    (18) term -> factor .

    MULTIPLY        reduce using rule 18 (term -> factor .)
    DIVIDE          reduce using rule 18 (term -> factor .)
    MODULO          reduce using rule 18 (term -> factor .)
    XOR             reduce using rule 18 (term -> factor .)
    INCLUSIVE_OR    reduce using rule 18 (term -> factor .)
    ADDRESS         reduce using rule 18 (term -> factor .)
    RPAREN          reduce using rule 18 (term -> factor .)
    PLUS            reduce using rule 18 (term -> factor .)
    MINUS           reduce using rule 18 (term -> factor .)
    VAR             reduce using rule 18 (term -> factor .)
    STORE           reduce using rule 18 (term -> factor .)
    GOTO            reduce using rule 18 (term -> factor .)
    ASSERT          reduce using rule 18 (term -> factor .)
    IF              reduce using rule 18 (term -> factor .)
    PRINT_OUTPUT    reduce using rule 18 (term -> factor .)
    ID              reduce using rule 18 (term -> factor .)
    $end            reduce using rule 18 (term -> factor .)
    ELSE            reduce using rule 18 (term -> factor .)
    EQUALITY        reduce using rule 18 (term -> factor .)
    INEQUALITY      reduce using rule 18 (term -> factor .)
    LESS_THAN       reduce using rule 18 (term -> factor .)
    GREATER_THAN    reduce using rule 18 (term -> factor .)
    LESS_THAN_EQ    reduce using rule 18 (term -> factor .)
    GREATER_THAN_EQ reduce using rule 18 (term -> factor .)
    COMMA           reduce using rule 18 (term -> factor .)


state 21

    (27) factor -> 32_BIT_USIGN_INT .

    MULTIPLY        reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    DIVIDE          reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    MODULO          reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    XOR             reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    INCLUSIVE_OR    reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    ADDRESS         reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    EQUALITY        reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    INEQUALITY      reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    LESS_THAN       reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    GREATER_THAN    reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    LESS_THAN_EQ    reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    GREATER_THAN_EQ reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    PLUS            reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    MINUS           reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    RPAREN          reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    VAR             reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    STORE           reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    GOTO            reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    ASSERT          reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    IF              reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    PRINT_OUTPUT    reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    ID              reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    $end            reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    COMMA           reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)
    ELSE            reduce using rule 27 (factor -> 32_BIT_USIGN_INT .)


state 22

    (40) unary_op -> MINUS .

    LPAREN          reduce using rule 40 (unary_op -> MINUS .)
    32_BIT_USIGN_INT reduce using rule 40 (unary_op -> MINUS .)
    ID              reduce using rule 40 (unary_op -> MINUS .)
    GET_INPUT       reduce using rule 40 (unary_op -> MINUS .)
    LOAD            reduce using rule 40 (unary_op -> MINUS .)
    PLUS            reduce using rule 40 (unary_op -> MINUS .)
    MINUS           reduce using rule 40 (unary_op -> MINUS .)
    INCREMENT       reduce using rule 40 (unary_op -> MINUS .)
    DECREMENT       reduce using rule 40 (unary_op -> MINUS .)
    ADDRESS         reduce using rule 40 (unary_op -> MINUS .)


state 23

    (39) unary_op -> PLUS .

    LPAREN          reduce using rule 39 (unary_op -> PLUS .)
    32_BIT_USIGN_INT reduce using rule 39 (unary_op -> PLUS .)
    ID              reduce using rule 39 (unary_op -> PLUS .)
    GET_INPUT       reduce using rule 39 (unary_op -> PLUS .)
    LOAD            reduce using rule 39 (unary_op -> PLUS .)
    PLUS            reduce using rule 39 (unary_op -> PLUS .)
    MINUS           reduce using rule 39 (unary_op -> PLUS .)
    INCREMENT       reduce using rule 39 (unary_op -> PLUS .)
    DECREMENT       reduce using rule 39 (unary_op -> PLUS .)
    ADDRESS         reduce using rule 39 (unary_op -> PLUS .)


state 24

    (25) factor -> unary_op . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    unary_op                       shift and go to state 24
    factor                         shift and go to state 46

state 25

    (42) unary_op -> DECREMENT .

    LPAREN          reduce using rule 42 (unary_op -> DECREMENT .)
    32_BIT_USIGN_INT reduce using rule 42 (unary_op -> DECREMENT .)
    ID              reduce using rule 42 (unary_op -> DECREMENT .)
    GET_INPUT       reduce using rule 42 (unary_op -> DECREMENT .)
    LOAD            reduce using rule 42 (unary_op -> DECREMENT .)
    PLUS            reduce using rule 42 (unary_op -> DECREMENT .)
    MINUS           reduce using rule 42 (unary_op -> DECREMENT .)
    INCREMENT       reduce using rule 42 (unary_op -> DECREMENT .)
    DECREMENT       reduce using rule 42 (unary_op -> DECREMENT .)
    ADDRESS         reduce using rule 42 (unary_op -> DECREMENT .)


state 26

    (32) bool_expression -> expression . rel_op expression
    (13) expression -> expression . add_op term
    (33) rel_op -> . EQUALITY
    (34) rel_op -> . INEQUALITY
    (35) rel_op -> . LESS_THAN
    (36) rel_op -> . GREATER_THAN
    (37) rel_op -> . LESS_THAN_EQ
    (38) rel_op -> . GREATER_THAN_EQ
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    EQUALITY        shift and go to state 47
    INEQUALITY      shift and go to state 50
    LESS_THAN       shift and go to state 54
    GREATER_THAN    shift and go to state 53
    LESS_THAN_EQ    shift and go to state 49
    GREATER_THAN_EQ shift and go to state 56
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    rel_op                         shift and go to state 55
    add_op                         shift and go to state 52

state 27

    (28) factor -> ID .

    MULTIPLY        reduce using rule 28 (factor -> ID .)
    DIVIDE          reduce using rule 28 (factor -> ID .)
    MODULO          reduce using rule 28 (factor -> ID .)
    XOR             reduce using rule 28 (factor -> ID .)
    INCLUSIVE_OR    reduce using rule 28 (factor -> ID .)
    ADDRESS         reduce using rule 28 (factor -> ID .)
    EQUALITY        reduce using rule 28 (factor -> ID .)
    INEQUALITY      reduce using rule 28 (factor -> ID .)
    LESS_THAN       reduce using rule 28 (factor -> ID .)
    GREATER_THAN    reduce using rule 28 (factor -> ID .)
    LESS_THAN_EQ    reduce using rule 28 (factor -> ID .)
    GREATER_THAN_EQ reduce using rule 28 (factor -> ID .)
    PLUS            reduce using rule 28 (factor -> ID .)
    MINUS           reduce using rule 28 (factor -> ID .)
    RPAREN          reduce using rule 28 (factor -> ID .)
    VAR             reduce using rule 28 (factor -> ID .)
    STORE           reduce using rule 28 (factor -> ID .)
    GOTO            reduce using rule 28 (factor -> ID .)
    ASSERT          reduce using rule 28 (factor -> ID .)
    IF              reduce using rule 28 (factor -> ID .)
    PRINT_OUTPUT    reduce using rule 28 (factor -> ID .)
    ID              reduce using rule 28 (factor -> ID .)
    $end            reduce using rule 28 (factor -> ID .)
    COMMA           reduce using rule 28 (factor -> ID .)
    ELSE            reduce using rule 28 (factor -> ID .)


state 28

    (10) statement -> ASSERT bool_expression .

    VAR             reduce using rule 10 (statement -> ASSERT bool_expression .)
    STORE           reduce using rule 10 (statement -> ASSERT bool_expression .)
    GOTO            reduce using rule 10 (statement -> ASSERT bool_expression .)
    ASSERT          reduce using rule 10 (statement -> ASSERT bool_expression .)
    IF              reduce using rule 10 (statement -> ASSERT bool_expression .)
    PRINT_OUTPUT    reduce using rule 10 (statement -> ASSERT bool_expression .)
    ID              reduce using rule 10 (statement -> ASSERT bool_expression .)
    $end            reduce using rule 10 (statement -> ASSERT bool_expression .)


state 29

    (2) statement_list -> statement_list statement .

    VAR             reduce using rule 2 (statement_list -> statement_list statement .)
    STORE           reduce using rule 2 (statement_list -> statement_list statement .)
    GOTO            reduce using rule 2 (statement_list -> statement_list statement .)
    ASSERT          reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    PRINT_OUTPUT    reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)


state 30

    (5) statement -> VAR id .
    (6) statement -> VAR id . ASSIGN expression

    VAR             reduce using rule 5 (statement -> VAR id .)
    STORE           reduce using rule 5 (statement -> VAR id .)
    GOTO            reduce using rule 5 (statement -> VAR id .)
    ASSERT          reduce using rule 5 (statement -> VAR id .)
    IF              reduce using rule 5 (statement -> VAR id .)
    PRINT_OUTPUT    reduce using rule 5 (statement -> VAR id .)
    ID              reduce using rule 5 (statement -> VAR id .)
    $end            reduce using rule 5 (statement -> VAR id .)
    ASSIGN          shift and go to state 57


state 31

    (7) statement -> id ASSIGN . expression
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 58

state 32

    (8) statement -> STORE LPAREN . expression COMMA expression RPAREN
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 59

state 33

    (9) statement -> GOTO expression .
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    VAR             reduce using rule 9 (statement -> GOTO expression .)
    STORE           reduce using rule 9 (statement -> GOTO expression .)
    GOTO            reduce using rule 9 (statement -> GOTO expression .)
    ASSERT          reduce using rule 9 (statement -> GOTO expression .)
    IF              reduce using rule 9 (statement -> GOTO expression .)
    PRINT_OUTPUT    reduce using rule 9 (statement -> GOTO expression .)
    ID              reduce using rule 9 (statement -> GOTO expression .)
    $end            reduce using rule 9 (statement -> GOTO expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 34

    (12) statement -> PRINT_OUTPUT LPAREN expression . RPAREN
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    RPAREN          shift and go to state 60
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 35

    (11) statement -> IF LPAREN bool_expression . RPAREN THEN GOTO expression ELSE GOTO expression

    RPAREN          shift and go to state 61


state 36

    (30) factor -> LOAD LPAREN . expression RPAREN
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 62

state 37

    (21) mulop -> MODULO .

    LPAREN          reduce using rule 21 (mulop -> MODULO .)
    32_BIT_USIGN_INT reduce using rule 21 (mulop -> MODULO .)
    ID              reduce using rule 21 (mulop -> MODULO .)
    GET_INPUT       reduce using rule 21 (mulop -> MODULO .)
    LOAD            reduce using rule 21 (mulop -> MODULO .)
    PLUS            reduce using rule 21 (mulop -> MODULO .)
    MINUS           reduce using rule 21 (mulop -> MODULO .)
    INCREMENT       reduce using rule 21 (mulop -> MODULO .)
    DECREMENT       reduce using rule 21 (mulop -> MODULO .)
    ADDRESS         reduce using rule 21 (mulop -> MODULO .)


state 38

    (20) mulop -> DIVIDE .

    LPAREN          reduce using rule 20 (mulop -> DIVIDE .)
    32_BIT_USIGN_INT reduce using rule 20 (mulop -> DIVIDE .)
    ID              reduce using rule 20 (mulop -> DIVIDE .)
    GET_INPUT       reduce using rule 20 (mulop -> DIVIDE .)
    LOAD            reduce using rule 20 (mulop -> DIVIDE .)
    PLUS            reduce using rule 20 (mulop -> DIVIDE .)
    MINUS           reduce using rule 20 (mulop -> DIVIDE .)
    INCREMENT       reduce using rule 20 (mulop -> DIVIDE .)
    DECREMENT       reduce using rule 20 (mulop -> DIVIDE .)
    ADDRESS         reduce using rule 20 (mulop -> DIVIDE .)


state 39

    (24) mulop -> ADDRESS .

    LPAREN          reduce using rule 24 (mulop -> ADDRESS .)
    32_BIT_USIGN_INT reduce using rule 24 (mulop -> ADDRESS .)
    ID              reduce using rule 24 (mulop -> ADDRESS .)
    GET_INPUT       reduce using rule 24 (mulop -> ADDRESS .)
    LOAD            reduce using rule 24 (mulop -> ADDRESS .)
    PLUS            reduce using rule 24 (mulop -> ADDRESS .)
    MINUS           reduce using rule 24 (mulop -> ADDRESS .)
    INCREMENT       reduce using rule 24 (mulop -> ADDRESS .)
    DECREMENT       reduce using rule 24 (mulop -> ADDRESS .)
    ADDRESS         reduce using rule 24 (mulop -> ADDRESS .)


state 40

    (23) mulop -> INCLUSIVE_OR .

    LPAREN          reduce using rule 23 (mulop -> INCLUSIVE_OR .)
    32_BIT_USIGN_INT reduce using rule 23 (mulop -> INCLUSIVE_OR .)
    ID              reduce using rule 23 (mulop -> INCLUSIVE_OR .)
    GET_INPUT       reduce using rule 23 (mulop -> INCLUSIVE_OR .)
    LOAD            reduce using rule 23 (mulop -> INCLUSIVE_OR .)
    PLUS            reduce using rule 23 (mulop -> INCLUSIVE_OR .)
    MINUS           reduce using rule 23 (mulop -> INCLUSIVE_OR .)
    INCREMENT       reduce using rule 23 (mulop -> INCLUSIVE_OR .)
    DECREMENT       reduce using rule 23 (mulop -> INCLUSIVE_OR .)
    ADDRESS         reduce using rule 23 (mulop -> INCLUSIVE_OR .)


state 41

    (17) term -> term mulop . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    unary_op                       shift and go to state 24
    factor                         shift and go to state 63

state 42

    (19) mulop -> MULTIPLY .

    LPAREN          reduce using rule 19 (mulop -> MULTIPLY .)
    32_BIT_USIGN_INT reduce using rule 19 (mulop -> MULTIPLY .)
    ID              reduce using rule 19 (mulop -> MULTIPLY .)
    GET_INPUT       reduce using rule 19 (mulop -> MULTIPLY .)
    LOAD            reduce using rule 19 (mulop -> MULTIPLY .)
    PLUS            reduce using rule 19 (mulop -> MULTIPLY .)
    MINUS           reduce using rule 19 (mulop -> MULTIPLY .)
    INCREMENT       reduce using rule 19 (mulop -> MULTIPLY .)
    DECREMENT       reduce using rule 19 (mulop -> MULTIPLY .)
    ADDRESS         reduce using rule 19 (mulop -> MULTIPLY .)


state 43

    (22) mulop -> XOR .

    LPAREN          reduce using rule 22 (mulop -> XOR .)
    32_BIT_USIGN_INT reduce using rule 22 (mulop -> XOR .)
    ID              reduce using rule 22 (mulop -> XOR .)
    GET_INPUT       reduce using rule 22 (mulop -> XOR .)
    LOAD            reduce using rule 22 (mulop -> XOR .)
    PLUS            reduce using rule 22 (mulop -> XOR .)
    MINUS           reduce using rule 22 (mulop -> XOR .)
    INCREMENT       reduce using rule 22 (mulop -> XOR .)
    DECREMENT       reduce using rule 22 (mulop -> XOR .)
    ADDRESS         reduce using rule 22 (mulop -> XOR .)


state 44

    (26) factor -> LPAREN expression . RPAREN
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    RPAREN          shift and go to state 64
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 45

    (29) factor -> GET_INPUT LPAREN . RPAREN

    RPAREN          shift and go to state 65


state 46

    (25) factor -> unary_op factor .

    MULTIPLY        reduce using rule 25 (factor -> unary_op factor .)
    DIVIDE          reduce using rule 25 (factor -> unary_op factor .)
    MODULO          reduce using rule 25 (factor -> unary_op factor .)
    XOR             reduce using rule 25 (factor -> unary_op factor .)
    INCLUSIVE_OR    reduce using rule 25 (factor -> unary_op factor .)
    ADDRESS         reduce using rule 25 (factor -> unary_op factor .)
    EQUALITY        reduce using rule 25 (factor -> unary_op factor .)
    INEQUALITY      reduce using rule 25 (factor -> unary_op factor .)
    LESS_THAN       reduce using rule 25 (factor -> unary_op factor .)
    GREATER_THAN    reduce using rule 25 (factor -> unary_op factor .)
    LESS_THAN_EQ    reduce using rule 25 (factor -> unary_op factor .)
    GREATER_THAN_EQ reduce using rule 25 (factor -> unary_op factor .)
    PLUS            reduce using rule 25 (factor -> unary_op factor .)
    MINUS           reduce using rule 25 (factor -> unary_op factor .)
    RPAREN          reduce using rule 25 (factor -> unary_op factor .)
    VAR             reduce using rule 25 (factor -> unary_op factor .)
    STORE           reduce using rule 25 (factor -> unary_op factor .)
    GOTO            reduce using rule 25 (factor -> unary_op factor .)
    ASSERT          reduce using rule 25 (factor -> unary_op factor .)
    IF              reduce using rule 25 (factor -> unary_op factor .)
    PRINT_OUTPUT    reduce using rule 25 (factor -> unary_op factor .)
    ID              reduce using rule 25 (factor -> unary_op factor .)
    $end            reduce using rule 25 (factor -> unary_op factor .)
    COMMA           reduce using rule 25 (factor -> unary_op factor .)
    ELSE            reduce using rule 25 (factor -> unary_op factor .)


state 47

    (33) rel_op -> EQUALITY .

    LPAREN          reduce using rule 33 (rel_op -> EQUALITY .)
    32_BIT_USIGN_INT reduce using rule 33 (rel_op -> EQUALITY .)
    ID              reduce using rule 33 (rel_op -> EQUALITY .)
    GET_INPUT       reduce using rule 33 (rel_op -> EQUALITY .)
    LOAD            reduce using rule 33 (rel_op -> EQUALITY .)
    PLUS            reduce using rule 33 (rel_op -> EQUALITY .)
    MINUS           reduce using rule 33 (rel_op -> EQUALITY .)
    INCREMENT       reduce using rule 33 (rel_op -> EQUALITY .)
    DECREMENT       reduce using rule 33 (rel_op -> EQUALITY .)
    ADDRESS         reduce using rule 33 (rel_op -> EQUALITY .)


state 48

    (16) add_op -> MINUS .

    LPAREN          reduce using rule 16 (add_op -> MINUS .)
    32_BIT_USIGN_INT reduce using rule 16 (add_op -> MINUS .)
    ID              reduce using rule 16 (add_op -> MINUS .)
    GET_INPUT       reduce using rule 16 (add_op -> MINUS .)
    LOAD            reduce using rule 16 (add_op -> MINUS .)
    PLUS            reduce using rule 16 (add_op -> MINUS .)
    MINUS           reduce using rule 16 (add_op -> MINUS .)
    INCREMENT       reduce using rule 16 (add_op -> MINUS .)
    DECREMENT       reduce using rule 16 (add_op -> MINUS .)
    ADDRESS         reduce using rule 16 (add_op -> MINUS .)


state 49

    (37) rel_op -> LESS_THAN_EQ .

    LPAREN          reduce using rule 37 (rel_op -> LESS_THAN_EQ .)
    32_BIT_USIGN_INT reduce using rule 37 (rel_op -> LESS_THAN_EQ .)
    ID              reduce using rule 37 (rel_op -> LESS_THAN_EQ .)
    GET_INPUT       reduce using rule 37 (rel_op -> LESS_THAN_EQ .)
    LOAD            reduce using rule 37 (rel_op -> LESS_THAN_EQ .)
    PLUS            reduce using rule 37 (rel_op -> LESS_THAN_EQ .)
    MINUS           reduce using rule 37 (rel_op -> LESS_THAN_EQ .)
    INCREMENT       reduce using rule 37 (rel_op -> LESS_THAN_EQ .)
    DECREMENT       reduce using rule 37 (rel_op -> LESS_THAN_EQ .)
    ADDRESS         reduce using rule 37 (rel_op -> LESS_THAN_EQ .)


state 50

    (34) rel_op -> INEQUALITY .

    LPAREN          reduce using rule 34 (rel_op -> INEQUALITY .)
    32_BIT_USIGN_INT reduce using rule 34 (rel_op -> INEQUALITY .)
    ID              reduce using rule 34 (rel_op -> INEQUALITY .)
    GET_INPUT       reduce using rule 34 (rel_op -> INEQUALITY .)
    LOAD            reduce using rule 34 (rel_op -> INEQUALITY .)
    PLUS            reduce using rule 34 (rel_op -> INEQUALITY .)
    MINUS           reduce using rule 34 (rel_op -> INEQUALITY .)
    INCREMENT       reduce using rule 34 (rel_op -> INEQUALITY .)
    DECREMENT       reduce using rule 34 (rel_op -> INEQUALITY .)
    ADDRESS         reduce using rule 34 (rel_op -> INEQUALITY .)


state 51

    (15) add_op -> PLUS .

    LPAREN          reduce using rule 15 (add_op -> PLUS .)
    32_BIT_USIGN_INT reduce using rule 15 (add_op -> PLUS .)
    ID              reduce using rule 15 (add_op -> PLUS .)
    GET_INPUT       reduce using rule 15 (add_op -> PLUS .)
    LOAD            reduce using rule 15 (add_op -> PLUS .)
    PLUS            reduce using rule 15 (add_op -> PLUS .)
    MINUS           reduce using rule 15 (add_op -> PLUS .)
    INCREMENT       reduce using rule 15 (add_op -> PLUS .)
    DECREMENT       reduce using rule 15 (add_op -> PLUS .)
    ADDRESS         reduce using rule 15 (add_op -> PLUS .)


state 52

    (13) expression -> expression add_op . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 66
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20

state 53

    (36) rel_op -> GREATER_THAN .

    LPAREN          reduce using rule 36 (rel_op -> GREATER_THAN .)
    32_BIT_USIGN_INT reduce using rule 36 (rel_op -> GREATER_THAN .)
    ID              reduce using rule 36 (rel_op -> GREATER_THAN .)
    GET_INPUT       reduce using rule 36 (rel_op -> GREATER_THAN .)
    LOAD            reduce using rule 36 (rel_op -> GREATER_THAN .)
    PLUS            reduce using rule 36 (rel_op -> GREATER_THAN .)
    MINUS           reduce using rule 36 (rel_op -> GREATER_THAN .)
    INCREMENT       reduce using rule 36 (rel_op -> GREATER_THAN .)
    DECREMENT       reduce using rule 36 (rel_op -> GREATER_THAN .)
    ADDRESS         reduce using rule 36 (rel_op -> GREATER_THAN .)


state 54

    (35) rel_op -> LESS_THAN .

    LPAREN          reduce using rule 35 (rel_op -> LESS_THAN .)
    32_BIT_USIGN_INT reduce using rule 35 (rel_op -> LESS_THAN .)
    ID              reduce using rule 35 (rel_op -> LESS_THAN .)
    GET_INPUT       reduce using rule 35 (rel_op -> LESS_THAN .)
    LOAD            reduce using rule 35 (rel_op -> LESS_THAN .)
    PLUS            reduce using rule 35 (rel_op -> LESS_THAN .)
    MINUS           reduce using rule 35 (rel_op -> LESS_THAN .)
    INCREMENT       reduce using rule 35 (rel_op -> LESS_THAN .)
    DECREMENT       reduce using rule 35 (rel_op -> LESS_THAN .)
    ADDRESS         reduce using rule 35 (rel_op -> LESS_THAN .)


state 55

    (32) bool_expression -> expression rel_op . expression
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 67

state 56

    (38) rel_op -> GREATER_THAN_EQ .

    LPAREN          reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)
    32_BIT_USIGN_INT reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)
    ID              reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)
    GET_INPUT       reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)
    LOAD            reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)
    PLUS            reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)
    MINUS           reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)
    INCREMENT       reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)
    DECREMENT       reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)
    ADDRESS         reduce using rule 38 (rel_op -> GREATER_THAN_EQ .)


state 57

    (6) statement -> VAR id ASSIGN . expression
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 68

state 58

    (7) statement -> id ASSIGN expression .
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    VAR             reduce using rule 7 (statement -> id ASSIGN expression .)
    STORE           reduce using rule 7 (statement -> id ASSIGN expression .)
    GOTO            reduce using rule 7 (statement -> id ASSIGN expression .)
    ASSERT          reduce using rule 7 (statement -> id ASSIGN expression .)
    IF              reduce using rule 7 (statement -> id ASSIGN expression .)
    PRINT_OUTPUT    reduce using rule 7 (statement -> id ASSIGN expression .)
    ID              reduce using rule 7 (statement -> id ASSIGN expression .)
    $end            reduce using rule 7 (statement -> id ASSIGN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 59

    (8) statement -> STORE LPAREN expression . COMMA expression RPAREN
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    COMMA           shift and go to state 69
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 60

    (12) statement -> PRINT_OUTPUT LPAREN expression RPAREN .

    VAR             reduce using rule 12 (statement -> PRINT_OUTPUT LPAREN expression RPAREN .)
    STORE           reduce using rule 12 (statement -> PRINT_OUTPUT LPAREN expression RPAREN .)
    GOTO            reduce using rule 12 (statement -> PRINT_OUTPUT LPAREN expression RPAREN .)
    ASSERT          reduce using rule 12 (statement -> PRINT_OUTPUT LPAREN expression RPAREN .)
    IF              reduce using rule 12 (statement -> PRINT_OUTPUT LPAREN expression RPAREN .)
    PRINT_OUTPUT    reduce using rule 12 (statement -> PRINT_OUTPUT LPAREN expression RPAREN .)
    ID              reduce using rule 12 (statement -> PRINT_OUTPUT LPAREN expression RPAREN .)
    $end            reduce using rule 12 (statement -> PRINT_OUTPUT LPAREN expression RPAREN .)


state 61

    (11) statement -> IF LPAREN bool_expression RPAREN . THEN GOTO expression ELSE GOTO expression

    THEN            shift and go to state 70


state 62

    (30) factor -> LOAD LPAREN expression . RPAREN
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    RPAREN          shift and go to state 71
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 63

    (17) term -> term mulop factor .

    MULTIPLY        reduce using rule 17 (term -> term mulop factor .)
    DIVIDE          reduce using rule 17 (term -> term mulop factor .)
    MODULO          reduce using rule 17 (term -> term mulop factor .)
    XOR             reduce using rule 17 (term -> term mulop factor .)
    INCLUSIVE_OR    reduce using rule 17 (term -> term mulop factor .)
    ADDRESS         reduce using rule 17 (term -> term mulop factor .)
    RPAREN          reduce using rule 17 (term -> term mulop factor .)
    PLUS            reduce using rule 17 (term -> term mulop factor .)
    MINUS           reduce using rule 17 (term -> term mulop factor .)
    VAR             reduce using rule 17 (term -> term mulop factor .)
    STORE           reduce using rule 17 (term -> term mulop factor .)
    GOTO            reduce using rule 17 (term -> term mulop factor .)
    ASSERT          reduce using rule 17 (term -> term mulop factor .)
    IF              reduce using rule 17 (term -> term mulop factor .)
    PRINT_OUTPUT    reduce using rule 17 (term -> term mulop factor .)
    ID              reduce using rule 17 (term -> term mulop factor .)
    $end            reduce using rule 17 (term -> term mulop factor .)
    ELSE            reduce using rule 17 (term -> term mulop factor .)
    EQUALITY        reduce using rule 17 (term -> term mulop factor .)
    INEQUALITY      reduce using rule 17 (term -> term mulop factor .)
    LESS_THAN       reduce using rule 17 (term -> term mulop factor .)
    GREATER_THAN    reduce using rule 17 (term -> term mulop factor .)
    LESS_THAN_EQ    reduce using rule 17 (term -> term mulop factor .)
    GREATER_THAN_EQ reduce using rule 17 (term -> term mulop factor .)
    COMMA           reduce using rule 17 (term -> term mulop factor .)


state 64

    (26) factor -> LPAREN expression RPAREN .

    MULTIPLY        reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    XOR             reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    INCLUSIVE_OR    reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    ADDRESS         reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    EQUALITY        reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    INEQUALITY      reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    LESS_THAN_EQ    reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GREATER_THAN_EQ reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    VAR             reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    STORE           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    GOTO            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    ASSERT          reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    IF              reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    PRINT_OUTPUT    reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    ID              reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 26 (factor -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 26 (factor -> LPAREN expression RPAREN .)


state 65

    (29) factor -> GET_INPUT LPAREN RPAREN .

    MULTIPLY        reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    DIVIDE          reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    MODULO          reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    XOR             reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    INCLUSIVE_OR    reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    ADDRESS         reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    EQUALITY        reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    INEQUALITY      reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    LESS_THAN       reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    GREATER_THAN    reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    LESS_THAN_EQ    reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    GREATER_THAN_EQ reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    PLUS            reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    MINUS           reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    RPAREN          reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    VAR             reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    STORE           reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    GOTO            reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    ASSERT          reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    IF              reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    PRINT_OUTPUT    reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    ID              reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    $end            reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    COMMA           reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)
    ELSE            reduce using rule 29 (factor -> GET_INPUT LPAREN RPAREN .)


state 66

    (13) expression -> expression add_op term .
    (17) term -> term . mulop factor
    (19) mulop -> . MULTIPLY
    (20) mulop -> . DIVIDE
    (21) mulop -> . MODULO
    (22) mulop -> . XOR
    (23) mulop -> . INCLUSIVE_OR
    (24) mulop -> . ADDRESS

    PLUS            reduce using rule 13 (expression -> expression add_op term .)
    MINUS           reduce using rule 13 (expression -> expression add_op term .)
    VAR             reduce using rule 13 (expression -> expression add_op term .)
    STORE           reduce using rule 13 (expression -> expression add_op term .)
    GOTO            reduce using rule 13 (expression -> expression add_op term .)
    ASSERT          reduce using rule 13 (expression -> expression add_op term .)
    IF              reduce using rule 13 (expression -> expression add_op term .)
    PRINT_OUTPUT    reduce using rule 13 (expression -> expression add_op term .)
    ID              reduce using rule 13 (expression -> expression add_op term .)
    $end            reduce using rule 13 (expression -> expression add_op term .)
    RPAREN          reduce using rule 13 (expression -> expression add_op term .)
    COMMA           reduce using rule 13 (expression -> expression add_op term .)
    EQUALITY        reduce using rule 13 (expression -> expression add_op term .)
    INEQUALITY      reduce using rule 13 (expression -> expression add_op term .)
    LESS_THAN       reduce using rule 13 (expression -> expression add_op term .)
    GREATER_THAN    reduce using rule 13 (expression -> expression add_op term .)
    LESS_THAN_EQ    reduce using rule 13 (expression -> expression add_op term .)
    GREATER_THAN_EQ reduce using rule 13 (expression -> expression add_op term .)
    ELSE            reduce using rule 13 (expression -> expression add_op term .)
    MULTIPLY        shift and go to state 42
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 37
    XOR             shift and go to state 43
    INCLUSIVE_OR    shift and go to state 40
    ADDRESS         shift and go to state 39

    mulop                          shift and go to state 41

state 67

    (32) bool_expression -> expression rel_op expression .
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    VAR             reduce using rule 32 (bool_expression -> expression rel_op expression .)
    STORE           reduce using rule 32 (bool_expression -> expression rel_op expression .)
    GOTO            reduce using rule 32 (bool_expression -> expression rel_op expression .)
    ASSERT          reduce using rule 32 (bool_expression -> expression rel_op expression .)
    IF              reduce using rule 32 (bool_expression -> expression rel_op expression .)
    PRINT_OUTPUT    reduce using rule 32 (bool_expression -> expression rel_op expression .)
    ID              reduce using rule 32 (bool_expression -> expression rel_op expression .)
    $end            reduce using rule 32 (bool_expression -> expression rel_op expression .)
    RPAREN          reduce using rule 32 (bool_expression -> expression rel_op expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 68

    (6) statement -> VAR id ASSIGN expression .
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    VAR             reduce using rule 6 (statement -> VAR id ASSIGN expression .)
    STORE           reduce using rule 6 (statement -> VAR id ASSIGN expression .)
    GOTO            reduce using rule 6 (statement -> VAR id ASSIGN expression .)
    ASSERT          reduce using rule 6 (statement -> VAR id ASSIGN expression .)
    IF              reduce using rule 6 (statement -> VAR id ASSIGN expression .)
    PRINT_OUTPUT    reduce using rule 6 (statement -> VAR id ASSIGN expression .)
    ID              reduce using rule 6 (statement -> VAR id ASSIGN expression .)
    $end            reduce using rule 6 (statement -> VAR id ASSIGN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 69

    (8) statement -> STORE LPAREN expression COMMA . expression RPAREN
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 72

state 70

    (11) statement -> IF LPAREN bool_expression RPAREN THEN . GOTO expression ELSE GOTO expression

    GOTO            shift and go to state 73


state 71

    (30) factor -> LOAD LPAREN expression RPAREN .

    MULTIPLY        reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    MODULO          reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    XOR             reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    INCLUSIVE_OR    reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    ADDRESS         reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    EQUALITY        reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    INEQUALITY      reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    LESS_THAN       reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    GREATER_THAN    reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    LESS_THAN_EQ    reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    GREATER_THAN_EQ reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    PLUS            reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    MINUS           reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    RPAREN          reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    VAR             reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    STORE           reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    GOTO            reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    ASSERT          reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    IF              reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    PRINT_OUTPUT    reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    ID              reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    $end            reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    COMMA           reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)
    ELSE            reduce using rule 30 (factor -> LOAD LPAREN expression RPAREN .)


state 72

    (8) statement -> STORE LPAREN expression COMMA expression . RPAREN
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    RPAREN          shift and go to state 74
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 73

    (11) statement -> IF LPAREN bool_expression RPAREN THEN GOTO . expression ELSE GOTO expression
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 75

state 74

    (8) statement -> STORE LPAREN expression COMMA expression RPAREN .

    VAR             reduce using rule 8 (statement -> STORE LPAREN expression COMMA expression RPAREN .)
    STORE           reduce using rule 8 (statement -> STORE LPAREN expression COMMA expression RPAREN .)
    GOTO            reduce using rule 8 (statement -> STORE LPAREN expression COMMA expression RPAREN .)
    ASSERT          reduce using rule 8 (statement -> STORE LPAREN expression COMMA expression RPAREN .)
    IF              reduce using rule 8 (statement -> STORE LPAREN expression COMMA expression RPAREN .)
    PRINT_OUTPUT    reduce using rule 8 (statement -> STORE LPAREN expression COMMA expression RPAREN .)
    ID              reduce using rule 8 (statement -> STORE LPAREN expression COMMA expression RPAREN .)
    $end            reduce using rule 8 (statement -> STORE LPAREN expression COMMA expression RPAREN .)


state 75

    (11) statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression . ELSE GOTO expression
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    ELSE            shift and go to state 76
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52

state 76

    (11) statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE . GOTO expression

    GOTO            shift and go to state 77


state 77

    (11) statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO . expression
    (13) expression -> . expression add_op term
    (14) expression -> . term
    (17) term -> . term mulop factor
    (18) term -> . factor
    (25) factor -> . unary_op factor
    (26) factor -> . LPAREN expression RPAREN
    (27) factor -> . 32_BIT_USIGN_INT
    (28) factor -> . ID
    (29) factor -> . GET_INPUT LPAREN RPAREN
    (30) factor -> . LOAD LPAREN expression RPAREN
    (39) unary_op -> . PLUS
    (40) unary_op -> . MINUS
    (41) unary_op -> . INCREMENT
    (42) unary_op -> . DECREMENT
    (43) unary_op -> . ADDRESS

    LPAREN          shift and go to state 17
    32_BIT_USIGN_INT shift and go to state 21
    ID              shift and go to state 27
    GET_INPUT       shift and go to state 19
    LOAD            shift and go to state 14
    PLUS            shift and go to state 23
    MINUS           shift and go to state 22
    INCREMENT       shift and go to state 16
    DECREMENT       shift and go to state 25
    ADDRESS         shift and go to state 18

    term                           shift and go to state 15
    unary_op                       shift and go to state 24
    factor                         shift and go to state 20
    expression                     shift and go to state 78

state 78

    (11) statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression .
    (13) expression -> expression . add_op term
    (15) add_op -> . PLUS
    (16) add_op -> . MINUS

    VAR             reduce using rule 11 (statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression .)
    STORE           reduce using rule 11 (statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression .)
    GOTO            reduce using rule 11 (statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression .)
    ASSERT          reduce using rule 11 (statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression .)
    IF              reduce using rule 11 (statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression .)
    PRINT_OUTPUT    reduce using rule 11 (statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression .)
    ID              reduce using rule 11 (statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression .)
    $end            reduce using rule 11 (statement -> IF LPAREN bool_expression RPAREN THEN GOTO expression ELSE GOTO expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 48

    add_op                         shift and go to state 52
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 0 resolved as shift
WARNING: shift/reduce conflict for STORE in state 0 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 0 resolved as shift
WARNING: shift/reduce conflict for ASSERT in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT_OUTPUT in state 0 resolved as shift
WARNING: shift/reduce conflict for ID in state 0 resolved as shift
